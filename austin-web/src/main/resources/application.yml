#TODO ok http配置信息
#只要一个application.yml被加载了，所有的bean都可以使用
ok:
  http:
    connect-timeout: 30
    keep-alive-duration: 300
    max-idle-connections: 200
    read-timeout: 30
    write-timeout: 30
spring:
  profiles:
    active: dev
  #TODO 数据库配置
  datasource:
    url: jdbc:mysql://192.168.159.128:3306/austin?useUnicode=true&characterEncoding=UTF-8&timeZone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: root
    #mysql8以下使用com.mysql.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver

  #TODO kafka相关的信息配置
  kafka:
    bootstrap-servers: "192.168.159.128:9092"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: latest
      enable-auto-commit: true  #消费者的偏移量自动提交
      auto-commit-interval: 1000  #间隔1000毫秒提交一次

  #TODO redis相关配置
  redis:
    host: "192.168.159.128"
    port: 6379
    password: austin

#TODO kafka topic配置
austin:
  topic:
    name: austinTopic
  #GrayLog ip 地址 TODO
  grayLogIp: 192.168.159.128

#监控配置 NOT A MUST
#采集路径写在了prometheus.yml中
management:
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true

# Apollo TODO 分布式配置
app:
  id: austin
apollo:
  bootstrap:
    enabled: true
    namespaces: boss.austin # 需访问Apollo管理面板创建部门和项目，我创建了“boss”部门和austin项目
  # TODO Apollo的地址，端口是eureka管理界面的端口(Apollo内使用Eureka注册中心，Apollo服务和Eureka服务的地址不一样)
  config-service: "http://192.168.159.128:7000"
#  想要动态刷新配置，还需要设置Apollo的监听器
springfox:
  documentation:
    swagger-ui:
      enabled: true

